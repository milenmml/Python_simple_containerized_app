apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "url-checker.fullname" . }}
  labels:
    {{- include "url-checker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "url-checker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "url-checker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "url-checker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        - name: init-container-{{ .Chart.Name }}
          image: "{{ .Values.initContainers.image.repository }}:{{ .Values.initContainers.image.tag }}"
          imagePullPolicy: {{ .Values.initContainers.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              {{- range .Values.initContainers.commands }}
              {{ . }}
              {{- end }}
          {{- if .Values.volumes.tmpVolume }}
          volumeMounts:
            - name: {{ .Values.volumes.tmpVolume.name }}
              mountPath: {{ .Values.volumes.tmpVolume.mountPath }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env }}
          env:
          {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
          {{- end }}
          {{- end }}
          ports:
            - name: flask
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: prometheus
              containerPort: {{ .Values.service.prometheusPort }}
              protocol: TCP
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.volumes.tmpVolume }}
          volumeMounts:
            - name: {{ .Values.volumes.tmpVolume.name }}
              mountPath: {{ .Values.volumes.tmpVolume.mountPath }}
          {{- end }}
      {{- if .Values.volumes.tmpVolume }}
      volumes:
      - name: {{ .Values.volumes.tmpVolume.name }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
